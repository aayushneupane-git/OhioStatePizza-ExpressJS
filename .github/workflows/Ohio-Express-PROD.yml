name: Node.js CI/CD Pipeline

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  NODE_ENV: production

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: 'npm'

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci --production

      - name: Create .env file
        run: |
          echo "STRIPE_SECRET_KEY=${{ secrets.STRIPE_SECRET_KEY }}" > .env
          echo "NODE_ENV=production" >> .env
          # Add other environment variables as needed

      - name: Deploy to server
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            cd /var/www/express-app
            git fetch origin main
            git reset --hard origin/main
            npm ci --production
            # Check if PM2 process exists and restart, otherwise start new
            if pm2 describe express-app > /dev/null 2>&1; then
              echo "Restarting existing PM2 process..."
              pm2 restart express-app --update-env
            else
              echo "Starting new PM2 process..."
              pm2 start npm --name express-app -- run start
            fi
            # Save PM2 process list
            pm2 save
            # Ensure PM2 starts on system reboot
            pm2 startup 2>/dev/null || true